[{"/Users/romanopalacz/Flatiron/code/Projects/Login/login-front/src/index.js":"1","/Users/romanopalacz/Flatiron/code/Projects/Login/login-front/src/App.js":"2","/Users/romanopalacz/Flatiron/code/Projects/Login/login-front/src/reportWebVitals.js":"3","/Users/romanopalacz/Flatiron/code/Projects/Login/login-front/src/Login.js":"4","/Users/romanopalacz/Flatiron/code/Projects/Login/login-front/src/LoginContainer.js":"5","/Users/romanopalacz/Flatiron/code/Projects/Login/login-front/src/Welcome.js":"6","/Users/romanopalacz/Flatiron/code/Projects/Login/login-front/src/appContext.js":"7","/Users/romanopalacz/Flatiron/code/Projects/Login/login-front/src/Style.js":"8"},{"size":500,"mtime":1609902165611,"results":"9","hashOfConfig":"10"},{"size":391,"mtime":1610894174414,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1609902165612,"results":"12","hashOfConfig":"10"},{"size":2732,"mtime":1610896731949,"results":"13","hashOfConfig":"10"},{"size":361,"mtime":1610338881878,"results":"14","hashOfConfig":"10"},{"size":362,"mtime":1610231946994,"results":"15","hashOfConfig":"10"},{"size":120,"mtime":1610231145727,"results":"16","hashOfConfig":"10"},{"size":950,"mtime":1610895093308,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1svgd70",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/romanopalacz/Flatiron/code/Projects/Login/login-front/src/index.js",[],["36","37"],"/Users/romanopalacz/Flatiron/code/Projects/Login/login-front/src/App.js",["38"],"/Users/romanopalacz/Flatiron/code/Projects/Login/login-front/src/reportWebVitals.js",[],"/Users/romanopalacz/Flatiron/code/Projects/Login/login-front/src/Login.js",["39"],"import React, {useContext, useState} from 'react'\nimport { appContext } from './appContext';\nimport {Form, Button} from './Style'\n\nexport const Login = props => {\n    const {setUser} = useContext(appContext)\n    const [error, setError] = useState(``);\n    const [username, setUsername] = useState(``)\n    const [password, setPassword] = useState(``)\n\n    const submithandler = e => {\n        e.preventDefault()\n        postAuth(username, password)\n    }\n\n    const changeUsername = e => {\n        const newUsername = e.target.value\n        setUsername(newUsername)\n    }\n\n    const changePassword = e => {\n        const newPassword = e.target.value\n        setPassword(newPassword)\n    }\n\n    const createUser = e => {\n        postUser(username, password)\n    }\n\n    const postUser = (username, password) => {\n        fetch(`http://localhost:3000/api/v1/users`, {\n            method: `POST`,\n            headers: {\n                \"Content-Type\": `application/json`,\n                Accept: `application/json`\n            },\n            body: JSON.stringify({\n                user: {\n                    username: username,\n                    password: password\n                }\n            })\n        })\n        .then(r => r.json())\n        .then(r => {\n            if (r.error) {\n                setError(r.error)\n            } else {\n                console.log(r)\n                setUser(r.user)\n            }\n        })\n        .catch((error) => {\n            console.error('Error:', error);\n        })\n    }\n\n    const postAuth = (username, password) => {\n        fetch(`http://localhost:3000/api/v1/login`, {\n            method: `POST`,\n            headers: {\n                \"Content-Type\": `application/json`,\n                Accept: `application/json`\n            },\n            body: JSON.stringify({\n                user: {\n                    username: username,\n                    password: password\n                }\n            })\n        })\n        .then(r => r.json())\n        .then(r => {\n            if (r.error) {\n                setError(r.error)\n            } else {\n                console.log(r)\n                setUser(r.user)\n            }\n        })\n        .catch((error) => {\n            console.error('Error:', error);\n        })\n    }\n\n    return(\n            <Form onSubmit={submithandler}>\n                <label>Username:</label>\n                <input onChange={changeUsername} value={username}></input>\n                <label>Password:</label>\n                <input type=\"password\" onChange={changePassword} value={password}></input>\n                <Button primary type=\"submit\">Login</Button>\n                <Button primary onClick={createUser}>Create</Button>\n            </Form>\n    )\n}","/Users/romanopalacz/Flatiron/code/Projects/Login/login-front/src/LoginContainer.js",[],"/Users/romanopalacz/Flatiron/code/Projects/Login/login-front/src/Welcome.js",[],"/Users/romanopalacz/Flatiron/code/Projects/Login/login-front/src/appContext.js",[],"/Users/romanopalacz/Flatiron/code/Projects/Login/login-front/src/Style.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":4,"column":9,"nodeType":"46","messageId":"47","endLine":4,"endColumn":14},{"ruleId":"44","severity":1,"message":"48","line":7,"column":12,"nodeType":"46","messageId":"47","endLine":7,"endColumn":17},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]